{"version":3,"sources":["constants.js","redux/reducers/churchData.js","redux/reducers/searchCity.js","redux/reducers/index.js","redux/store.js","redux/actions/addChurchDataFromApi.js","redux/actions/addCurrentTargetChurch.js","redux/actions/addNameCity.js","redux/actions/addGeoData.js","containers/Ymap/index.js","containers/Ymap/Ymap.jsx","components/WindowDataChurch/index.js","components/WindowDataChurch/WindowDataChurch.jsx","containers/FormGeolocation/index.js","containers/FormGeolocation/FormGeolocation.jsx","containers/App/index.js","containers/App/App.jsx","index.js"],"names":["URL_GEO_LOCATION","initialState","churchData","currentTargetChurch","state","type","payload","city","geoData","lat","lon","searchCity","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","addChurchDataFromApi","data","dispatch","addCurrentTargetChurch","church","addNameCity","addGeoData","Ymap","connect","mapState","center","zoom","useEffect","fetch","then","response","json","churchsData","forEach","item","id","Date","now","latitude","longitude","name","churchAddressStreet","church_address_street_address","phoneNumber","phone_number","siteURL","url","push","catch","err","console","log","className","map","key","geometry","properties","hintContent","balloonContentHeader","balloonContentBody","modules","options","iconLayout","iconImageSize","iconImageOffset","onClick","currentChurch","filter","clickOnPlaceMark","WindowDataChurch","address","phone","strPhone","href","FormGeolocation","searchCityName","useState","handleInpChange","setHandleInpChange","geolocationData","location","onSubmit","e","preventDefault","onChange","target","value","placeholder","App","Application","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fde23b47.chunk.js","sourcesContent":["export const DEFAULT_LAT = '40.730610';\r\nexport const DEFAULT_LON = '-73.935242';\r\n\r\nconst API_KEY_TO_GEO_DATA = '7fff07755d0c42e5a3e120823202209';\r\n\r\nexport const URL_GEO_LOCATION = `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY_TO_GEO_DATA}&q=`;\r\n\r\nexport const ADD_CHURCH_DATA_FROM_API = 'ADD_CHURCH_DATA_FROM_API';\r\n\r\nexport const ADD_CURRENT_TARGET_CHURCH = 'ADD_CURRENT_TARGET_CHURCH';\r\n\r\nexport const SEARCH_CITY = 'SEARCH_CITY';\r\n\r\nexport const ADD_GEO_DATA = 'ADD_GEO_DATA';","import {ADD_CHURCH_DATA_FROM_API, ADD_CURRENT_TARGET_CHURCH} from '../../constants';\r\n\r\nconst initialState = {\r\n    churchData: [],\r\n    currentTargetChurch: null\r\n};\r\n\r\nconst churchData = (state = initialState, {type, payload}) => {\r\n    if(type === ADD_CHURCH_DATA_FROM_API){\r\n        return {\r\n            ...state,\r\n            churchData: [...payload]\r\n        };\r\n    } else if(type === ADD_CURRENT_TARGET_CHURCH){\r\n        return {\r\n            ...state,\r\n            currentTargetChurch: payload\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport default churchData;","import {SEARCH_CITY, ADD_GEO_DATA, DEFAULT_LAT, DEFAULT_LON} from '../../constants';\r\n\r\nconst initialState = {\r\n    city: '',\r\n    geoData: null,\r\n    lat: DEFAULT_LAT,\r\n    lon: DEFAULT_LON\r\n};\r\n\r\nconst searchCity = (state = initialState, {type, payload}) => {\r\n    if(type === SEARCH_CITY){\r\n        return {\r\n            ...state,\r\n            city: payload\r\n        }\r\n    } else if(type === ADD_GEO_DATA){\r\n        return {\r\n            ...state,\r\n            geoData: payload,\r\n            lat: payload.lat,\r\n            lon: payload.lon\r\n        }\r\n    }\r\n    return state\r\n};\r\n\r\nexport default searchCity;\r\n","import churchData from \"./churchData\";\r\nimport searchCity from \"./searchCity\";\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    churchData,\r\n    searchCity\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import {ADD_CHURCH_DATA_FROM_API} from \"../../constants\";\r\n\r\nconst addChurchDataFromApi = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({type: ADD_CHURCH_DATA_FROM_API, payload: data})\r\n    }\r\n};\r\n\r\nexport default addChurchDataFromApi;","import {ADD_CURRENT_TARGET_CHURCH} from '../../constants';\r\n\r\nconst addCurrentTargetChurch = church => ({type: ADD_CURRENT_TARGET_CHURCH, payload: church});\r\n\r\nexport default addCurrentTargetChurch;","import {SEARCH_CITY} from '../../constants';\r\n\r\nconst addNameCity = (city) => ({type: SEARCH_CITY, payload: city});\r\n\r\nexport default addNameCity;","import {ADD_GEO_DATA} from \"../../constants\";\r\n\r\nconst addGeoData = geoData => {\r\n    return (dispatch) => {\r\n        dispatch({type: ADD_GEO_DATA, payload: geoData})\r\n    }\r\n};\r\n\r\nexport default addGeoData;","import Ymap from \"./Ymap\";\r\n\r\nexport default Ymap;","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\r\nimport { addChurchDataFromApi, addCurrentTargetChurch } from '../../redux/actions';\r\n\r\n\r\nconst Ymap = ({churchData, lat, lon, addChurchDataFromApi, addCurrentTargetChurch}) => {\r\n    const mapState = {\r\n        center: [lat, lon],\r\n        zoom: 13,\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://apiv4.updateparishdata.org/Churchs/?lat=${lat}&long=${lon}&pg=1`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const churchsData = [];\r\n                data.forEach((item) => {\r\n                    const church = {\r\n                        id: Date.now() + item.latitude,\r\n                        lat: item.latitude,\r\n                        lon: item.longitude,\r\n                        name: item.name,\r\n                        churchAddressStreet: item.church_address_street_address,\r\n                        phoneNumber: item.phone_number,\r\n                        siteURL: item.url,\r\n                    }\r\n                    churchsData.push(church)\r\n                })\r\n                addChurchDataFromApi(churchsData)\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [lat, lon]);\r\n\r\n\r\n    const clickOnPlaceMark = (id) => {\r\n        let currentChurch = churchData.filter(item => item.id === id);\r\n        addCurrentTargetChurch(currentChurch[0])\r\n    };\r\n\r\n    return (\r\n        <YMaps>\r\n            <div>\r\n                <Map state={mapState} className={\"ymap\"}>\r\n                    {\r\n                        churchData.map((church) => {\r\n                            return <Placemark\r\n                                key={church.id}\r\n                                geometry={[church.lat, church.lon]}\r\n                                properties={{\r\n                                    hintContent: church.name,\r\n                                    balloonContentHeader : church.name,\r\n                                    balloonContentBody: church.churchAddressStreet\r\n\r\n                                }}\r\n                                modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                                options={{\r\n                                    iconLayout: 'default#image',\r\n                                    iconImageSize: [30, 42],\r\n                                    iconImageOffset: [-3, -42],\r\n                                }}\r\n                                onClick={() => clickOnPlaceMark(church.id)}\r\n                            />\r\n                        })\r\n                    }\r\n                </Map>\r\n            </div>\r\n        </YMaps>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    churchData: state.churchData.churchData,\r\n    geoData: state.searchCity.geoData,\r\n    lat: state.searchCity.lat,\r\n    lon: state.searchCity.lon\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addChurchDataFromApi: data => dispatch(addChurchDataFromApi(data)),\r\n    addCurrentTargetChurch: church => dispatch(addCurrentTargetChurch(church))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Ymap);","import WindowDataChurch from \"./WindowDataChurch\";\r\n\r\nexport default WindowDataChurch;","import React from \"react\";\r\n\r\nconst windowDataChurch = ({name, address, phone, url}) => {\r\n    const strPhone = `tel:${phone}`;\r\n    return (\r\n        <div className=\"block\">\r\n            <div className=\"container\">\r\n                <h2 className=\"block__title\">{name}</h2>\r\n                <p className=\"block__text block__text--address\">{address}</p>\r\n                <a className=\"block__link block__link--phone\" href={strPhone}>{phone}</a>\r\n                <a className=\"block__link block__link--site\" href={url}>{url}</a>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default windowDataChurch;","import FormGeolocation from './FormGeolocation';\r\n\r\nexport default FormGeolocation","import React, {useState, useEffect} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {addNameCity, addGeoData} from '../../redux/actions';\r\nimport {URL_GEO_LOCATION} from '../../constants';\r\n\r\n\r\nconst FormGeolocation = ({searchCityName, addNameCity, addGeoData}) => {\r\n    const [handleInpChange, setHandleInpChange] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        if(searchCityName){\r\n            fetch(`${URL_GEO_LOCATION}${searchCityName}&days=3`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const geolocationData = {\r\n                        name: data.location.name,\r\n                        lat: data.location.lat,\r\n                        lon: data.location.lon,\r\n                    };\r\n                    addGeoData(geolocationData);\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n        }\r\n    }, [searchCityName]);\r\n\r\n\r\n\r\n    const handleSubmit = e => e.preventDefault();\r\n\r\n    const handleClick = () => {\r\n        addNameCity(handleInpChange);\r\n        setHandleInpChange('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form\">\r\n            <input\r\n                className=\"form__inp\"\r\n                onChange={e => setHandleInpChange(e.target.value)}\r\n                placeholder={'city name'}\r\n                value={handleInpChange}\r\n            />\r\n            <button className=\"form__btn\" onClick={handleClick}>\r\n                <span>Search!</span>\r\n            </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    searchCityName: state.searchCity.city\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNameCity: city => dispatch(addNameCity(city)),\r\n    addGeoData: geoData => dispatch(addGeoData(geoData))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FormGeolocation);","import App from \"./App\";\r\n\r\nexport default App;","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {WindowDataChurch} from '../../components';\r\nimport Ymap from '../Ymap';\r\nimport FormGeolocation from \"../FormGeolocation\";\r\n\r\n\r\nconst App = ({currentTargetChurch}) => {\r\n    return (\r\n        <div>\r\n            <FormGeolocation />\r\n            {\r\n                currentTargetChurch && <WindowDataChurch\r\n                    name={currentTargetChurch.name}\r\n                    address={currentTargetChurch.churchAddressStreet}\r\n                    phone={currentTargetChurch.phoneNumber}\r\n                    url={currentTargetChurch.siteURL}\r\n                />\r\n            }\r\n            <Ymap />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    currentTargetChurch: state.churchData.currentTargetChurch\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from \"./redux/store\";\nimport { App } from './containers';\nimport './sass/index.scss';\n\nconst Application = () => (\n    <Provider store={store}>\n        <div className=\"Application\">\n            <App/>\n        </div>\n    </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}